@using System.Net.Http
@using BasicCompany.Blazor.Models.Navigation
@using Newtonsoft.Json
@using System.Globalization
@using Newtonsoft.Json.Linq
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

@if (SupportedLanguages?.Any() == true)
{
    <div class="navbar-item has-dropdown is-hoverable">
        <a class="navbar-link">
            @SupportedLanguages.FirstOrDefault(l => l.IsSelected)?.NativeName
        </a>
        <div class="navbar-dropdown is-boxed">
            @foreach (var language in SupportedLanguages)
            {
                <a class="navbar-item" href="@GetLanguageUrl(language.Name)">
                    @language.NativeName
                </a>
            }
        </div>
    </div>
}

@code {
    [Parameter]
    public IEnumerable<SupportedLanguage> SupportedLanguages { get; set; }

    private string GetLanguageUrl(string languageName)
    {
        var uri = new Uri(NavigationManager.Uri);
        var segments = uri.AbsolutePath.Split('/', StringSplitOptions.RemoveEmptyEntries);

        if (segments.Length > 0 && SupportedLanguages.Any(l => l.Name.Equals(segments[0], StringComparison.OrdinalIgnoreCase)))
        {
            segments[0] = languageName;
        }
        else
        {
            segments = new[] { languageName }.Concat(segments).ToArray();
        }

        var newPath = string.Join('/', segments);
        return $"{uri.Scheme}://{uri.Host}:{uri.Port}/{newPath}";
    }
}
